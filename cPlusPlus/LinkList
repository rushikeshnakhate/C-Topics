#include <iostream>

using namespace std;

struct Node {
  int data ;
  Node *next ;
};

class LinkList{
  Node *head ;
  
public:
  Node* add(const int & element ) ;
  Node* get_last_node();
  void  print_list();
};





Node* LinkList::add(const int & element ) {
  Node *new_node = head ;
  if ( new_node == nullptr) {
     new_node= new Node;
     head = new_node ;
  }else {
    new_node= new Node;
    Node *last_node = get_last_node() ;
    last_node->next = new_node ;
    
  }
  new_node->data = element  ;
  new_node->next = nullptr ;
  return new_node ;  
}




Node* LinkList::get_last_node() {
  Node *counter = head ;
  if ( counter ==nullptr) {
    return new Node ;
  }
  while ( counter->next != nullptr)
    counter = counter->next ;
  
  return counter ;
}

void LinkList::print_list() {
  Node *counter = head ;
  if ( counter == nullptr) 
    std::cout<<"Ouch!!List is empty" <<std::endl ;
  
  
  while ( counter != nullptr) {
    std::cout<<counter->data<<std::endl ;
    counter = counter->next ;
  }
}





int main(){
  auto p = new LinkList() ;
  p->add(10) ;
  p->add(1) ;
  p->add(2) ;
  p->print_list() ;
  return 0 ;
}
